/* Generated by Ctran from dlgbox.cl */
#define DLGBOX_G
#ifndef BWIN_G
#include <bwin.g>
#endif
#ifndef TEXTWIN_G
#include <textwin.g>
#endif
/* Class Numbers */
#define C_DLGCHAIN 12
#define C_DLGBOX 13
#define C_ERRORDLG 14
#define C_QUERYDLG 15
#define C_FLISTDLG 16
/* Method Numbers */
#define O_DL_SET_SIZE 27
#define O_DL_DIMMED_MESSAGE 25
#define O_DL_INQ_MINSIZE 28
#define O_DL_ITEM_REPLACE 22
#define O_DL_ITEM_APPEND 23
#define O_DL_HANDLE_TO_INDEX 20
#define O_DL_CLR_ITEM_FLAGS 17
#define O_DL_TAKE_FOCUS 19
#define O_DL_ITEM_ADD 26
#define O_DL_FOCUS 32
#define O_DL_SET_ITEM_FLAGS 16
#define O_DL_ITEM_DIM 15
#define O_DL_ITEM_NEW 34
#define O_DL_INIT 24
#define O_DL_KEY 30
#define O_DL_DYN_INIT 29
#define O_DL_INDEX_TO_HANDLE 21
#define O_DL_CHANGED 31
#define O_DL_LAUNCH_SUB 33
#define O_DL_ITEM_LOCK 14
#define O_DL_SET_PROMPT 18
/* Constants for dlgchain */
#define PR_WIN_NO_DDP PR_WIN_FORCE_TOP
#define HELPDLG_BASIC_HELP PR_WIN_FORCE_RIGHT
#define HELPDLG_HELP_INDEX PR_WIN_FORCE_LEFT
#define DLGCHAIN_WITH_MENU PR_WIN_FORCE_BOTTOM
/* Property of dlgchain */
typedef struct {
PR_BWIN *next;
} PRS_DLGCHAIN;
typedef struct pr_dlgchain
{
PRS_ROOT root;
PRS_WIN win;
PRS_DLGCHAIN dlgchain;
} PR_DLGCHAIN;
/* Constants for dlgbox */
#define DLGBOX_NOTIFY_ENTER 0x0001
#define DLGBOX_NOTIFY_ESCAPE 0x0002
#define DLGBOX_RBUF_FILLED 0x0004
#define DLGBOX_ACTION_LIST 0x0008
#define DLGBOX_FROM_HWIF 0x0010
#define DLGBOX_SMALL_FONT DLGBOX_FROM_HWIF
#define DLGBOX_NO_WAIT 0x0020
#define DLGBOX_NOTIFY_ALL_ACT 0x0040
#define DLGBOX_REPORT_ACT_HORIZ 0x0080
#define DLGBOX_APPEND_UNITS_TITLE 0x0100
#define DLGBOX_SMALL_ACTION_LIST 0x0200
#define DLGBOX_NO_SHADOW 0x0400
#define DLGBOX_NO_DDP 0x0800
#define DLGBOX_ITEM_NOTIFY_CHANGED 0x0001
#define DLGBOX_ITEM_DIMMED 0x0002
#define DLGBOX_ITEM_UNDERLINED 0x0004
#define DLGBOX_ITEM_APPL_CAT 0x0008
#define DLGBOX_ITEM_CENTRE 0x0010
#define DLGBOX_ITEM_DEAD 0x0020
#define DLGBOX_ITEM_NOTIFY_FOCUS 0x0080
#define DLGBOX_ITEM_NEEDS_PACK 0x0100
#define DLGBOX_ITEM_LOCKED 0x0200
#define DLGBOX_ITEM_CAN_DEFER_X 0x0400
#define DLGBOX_ITEM_X_PENDING 0x0800
#define DLGBOX_ITEM_ACLIST 0x1000
#define DLGBOX_LEFT_GAP (BWIN_CUSHION_X+7)
#define DLGBOX_BULLET_GAP 3
#define DLGBOX_VERT_GAP (BWIN_CUSHION_Y+2)
#define DLGBOX_MAX_ITEM 9
#define DLGBOX_MAX_ITEM_VINE 11
#define UNDERLINE_DEPTH 3
#define EXTRA_GUTTER_WIDTH 4
#define DLGBOX_ROMAN8_FONT 5
/* Types for dlgbox */
typedef struct
{
unsigned short int flags;
char title[1];
} HD_DLGBOX_RSC;
typedef struct
{
short int flags;
unsigned char class;
char prompt[1];
} AD_DLGBOX;
typedef struct
{
PR_LODGER *hand;
PR_TEXTWIN *prompt;
short int flags;
} DLGBOX_ITEM;
typedef union
{
DLGBOX_ITEM item[7];
DLGBOX_ITEM *pitm;
} DLGBOX_ITEM_UNION;
/* Property of dlgbox */
typedef struct {
DLGBOX_ITEM_UNION u;
void *rbuf;
short int dimrid;
short int helprid;
unsigned short int flags;
unsigned char focus;
unsigned char count;
unsigned char current;
unsigned char font;
unsigned char absorb;
unsigned char changed;
} PRS_DLGBOX;
typedef struct pr_dlgbox
{
PRS_ROOT root;
PRS_WIN win;
PRS_DLGCHAIN dlgchain;
PRS_DLGBOX dlgbox;
} PR_DLGBOX;
/* Types for errordlg */
typedef struct
{
short int error;
char message[80];
} RBUF_ERROR;
/* Property of errordlg */
typedef struct pr_errordlg
{
PRS_ROOT root;
PRS_WIN win;
PRS_DLGCHAIN dlgchain;
PRS_DLGBOX dlgbox;
} PR_ERRORDLG;
/* Types for querydlg */
typedef struct
{
short int result;
char message[100];
} RBUF_QUERY;
/* Property of querydlg */
typedef struct pr_querydlg
{
PRS_ROOT root;
PRS_WIN win;
PRS_DLGCHAIN dlgchain;
PRS_DLGBOX dlgbox;
} PR_QUERYDLG;
/* Property of flistdlg */
typedef struct pr_flistdlg
{
PRS_ROOT root;
PRS_WIN win;
PRS_DLGCHAIN dlgchain;
PRS_DLGBOX dlgbox;
} PR_FLISTDLG;
