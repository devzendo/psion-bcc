/* Generated by Ctran from notes.cat */
#define NOTES_G
#ifndef HWIMMAN_G
#include <hwimman.g>
#endif
#ifndef EDWIN_G
#include <edwin.g>
#endif
#ifndef IPC_G
#include <ipc.g>
#endif
/* Category Numbers */
#define CAT_NOTES_NOTES 0
#define CAT_NOTES_OLIB 1
#define CAT_NOTES_HWIM 2
/* Class Numbers */
#define C_NOWIN 0
#define C_NOTITWIN 1
#define C_NOFNDWIN 2
#define C_NOTAGWIN 3
#define C_NOCNTWIN 4
#define C_NOCOMMAN 5
#define C_NOWSERV 6
#define C_NOLINKSV 7
#define C_NODL_GOTO 8
#define C_NODL_OPTIONS 9
/* Method Numbers */
#define O_NCOW_NOTES 20
#define O_NCOT_CLEAR_ALL 30
#define O_NW_INIT 15
#define O_NCOW_TITLE 19
#define O_NCOE_INSERT 14
#define O_NCON_INSERT 9
#define O_NCOS_OPTIONS 22
#define O_NCOE_COPY 15
#define O_NCOX_PRINT 35
#define O_NCOE_SUM 18
#define O_NW_INCREASE_WIDTH 14
#define O_NCO_QUICK_FIND 37
#define O_NCOS_LAST 26
#define O_NCON_COPY 10
#define O_NCOT_SET 27
#define O_NCOT_SET_ALL 29
#define O_NCOE_BRING 16
#define O_NCON_RECORD 12
#define O_NCOX_GOTO 31
#define O_NCON_NEW 8
#define O_NCOX_PSETUP 34
#define O_NCOX_MOVETO 32
#define O_NCOW_FIND 21
#define O_NCOX_SYMBOLS 33
#define O_NCON_UNDO 13
#define O_NCOS_BACKWARDS 24
#define O_NCOE_EVALUATE 17
#define O_NCON_DELETE 11
#define O_NCOS_FORWARDS 23
#define O_NCOS_FIRST 25
#define O_NCO_SWITCH_FOCUS 36
#define O_NCOT_CLEAR 28
/* Property of nowin */
typedef struct {
PR_EDWIN *edwin;
} PRS_NOWIN;
typedef struct pr_nowin
{
PRS_ROOT root;
PRS_WIN win;
PRS_NOWIN nowin;
} PR_NOWIN;
/* Property of notitwin */
typedef struct pr_notitwin
{
PRS_ROOT root;
PRS_WIN win;
PRS_NOWIN nowin;
} PR_NOTITWIN;
/* Property of nofndwin */
typedef struct {
TEXT *prompt;
UWORD len;
UWORD x;
UWORD y;
} PRS_NOFNDWIN;
typedef struct pr_nofndwin
{
PRS_ROOT root;
PRS_WIN win;
PRS_NOWIN nowin;
PRS_NOFNDWIN nofndwin;
} PR_NOFNDWIN;
/* Property of notagwin */
typedef struct {
UWORD on;
} PRS_NOTAGWIN;
typedef struct pr_notagwin
{
PRS_ROOT root;
PRS_WIN win;
PRS_NOTAGWIN notagwin;
} PR_NOTAGWIN;
/* Property of nocntwin */
typedef struct {
UWORD val;
UWORD max;
} PRS_NOCNTWIN;
typedef struct pr_nocntwin
{
PRS_ROOT root;
PRS_WIN win;
PRS_NOCNTWIN nocntwin;
} PR_NOCNTWIN;
/* Constants for nocomman */
#define TITLE_WINDOW 0
#define NOTES_WINDOW 1
#define FIND_WINDOW 2
#define MAX_NUMBER_NOTES 99
#define FIND_NOTES_ONLY 0
#define FIND_TITLE_ONLY 1
#define FIND_EITHER_WIN 2
/* Types for nocomman */
typedef struct
{
UBYTE len;
TEXT *buf;
} LENBUF;
typedef struct
{
LENBUF title;
LENBUF note;
UWORD tagged;
} NOTE;
/* Property of nocomman */
typedef struct {
PR_NOWIN *edit[3];
UWORD which;
PR_NOTAGWIN *tagwin;
PR_NOCNTWIN *cntwin;
WORD where;
UBYTE casesens;
UBYTE findtype;
NOTE clip;
SE_EDWIN pattern;
} PRS_NOCOMMAN;
typedef struct pr_nocomman
{
PRS_ROOT root;
PRS_NOCOMMAN nocomman;
} PR_NOCOMMAN;
/* Property of nowserv */
typedef struct pr_nowserv
{
PRS_ROOT root;
PRS_ACTIVE active;
PRS_WSERV wserv;
} PR_NOWSERV;
/* Property of nolinksv */
typedef struct {
PR_EWLINKSV *ewls;
} PRS_NOLINKSV;
typedef struct pr_nolinksv
{
PRS_ROOT root;
PRS_SERVER server;
PRS_LINKSV linksv;
PRS_NOLINKSV nolinksv;
} PR_NOLINKSV;
/* Property of nodl_goto */
typedef struct pr_nodl_goto
{
PRS_ROOT root;
PRS_WIN win;
PRS_DLGCHAIN dlgchain;
PRS_DLGBOX dlgbox;
} PR_NODL_GOTO;
/* Property of nodl_options */
typedef struct pr_nodl_options
{
PRS_ROOT root;
PRS_WIN win;
PRS_DLGCHAIN dlgchain;
PRS_DLGBOX dlgbox;
} PR_NODL_OPTIONS;
