/* Generated by Ctran from filelist.cl */
#define FILELIST_G
#ifndef FACTIVE_G
#include <factive.g>
#endif
#ifndef H_FILE_H
#include <h_file.h>
#endif
#ifndef LISTBOX_G
#include <listbox.g>
#endif
#ifndef TIME_G
#include <time.g>
#endif
/* Class Numbers */
#define C_NONODE 39
#define C_HPSEL 40
#define C_FILELIST 41
/* Method Numbers */
#define O_FL_LOCCHG 23
#define O_FL_LIST_COMPLETE 22
/* Property of nonode */
typedef struct pr_nonode
{
PRS_ROOT root;
PRS_ACTIVE active;
PRS_FACTIVE factive;
PRS_FNODE fnode;
} PR_NONODE;
/* Property of hpsel */
typedef struct {
PR_ROOT *owner;
} PRS_HPSEL;
typedef struct pr_hpsel
{
PRS_ROOT root;
PRS_ACTIVE active;
PRS_FACTIVE factive;
PRS_FSCAN fscan;
PRS_PSEL psel;
PRS_HPSEL hpsel;
} PR_HPSEL;
/* Constants for filelist */
#define PR_FILELIST_ISFILE 0x100
#define PR_FILELIST_TAGS_CHANGED 0x0200
#define PR_FILELIST_NOSCAN 0x0400
#define PR_FILELIST_SCANNING 0x0800
#define PR_FILELIST_LOCAL 0x1000
#define PR_FILELIST_WILDCARDED 0x2000
#define PR_FILELIST_SET_UNMARKED 0x4000
#define IN_FILELIST_ALLOW_DIRS H_FILE_ALLOW_DIRS
#define IN_FILELIST_JUST_DIRS H_FILE_JUST_DIRS
#define IN_FILELIST_CAN_TAG H_FILE_CAN_TAG
#define IN_FILELIST_CAN_WILDCARD H_FILE_CAN_WILDCARD
#define IN_FILELIST_NO_FORCE_WILD 0x8000
#define FILENAME_WIDTH 12
#define FILESIZE_WIDTH 7
#define FILETIME_WIDTH 7
#define FILEDATE_WIDTH 9
/* Types for filelist */
typedef struct
{
short int dtype;
void *vadev;
short int ascoff;
unsigned short int tagoff;
unsigned short int sizeoff;
unsigned short int timeoff;
unsigned short int dateoff;
unsigned short int dateendoff;
char asc[P_FNAMESIZE];
} PR_FILELIST_X;
/* Property of filelist */
typedef struct {
PR_HPSEL *hpsel;
PR_VASTR *contexts;
PR_TIME *date;
PR_VASTR *tags;
PR_VASTR **ptags;
PR_ROOT *next;
unsigned short int locmask;
unsigned short int flags;
short int parent;
short int thisdir;
P_FPARSE crk;
short int derr;
PR_FILELIST_X *x;
unsigned long int dfree;
char wild[P_FNAMESIZE];
char subd[P_FNAMESIZE];
char scr[P_FNAMESIZE];
char targ[P_FNAMESIZE];
} PRS_FILELIST;
typedef struct pr_filelist
{
PRS_ROOT root;
PRS_WIN win;
PRS_LISTBOX listbox;
PRS_FILELIST filelist;
} PR_FILELIST;
