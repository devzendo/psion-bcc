/* Generated by Ctran from timer.cat */
#define TIMER_G
#ifndef APPMAN_G
#include <appman.g>
#endif
/* Class Numbers */
#define C_TIMER 41
#define C_BUZSND 42
#define C_ALARR 43
#define C_ANIMATOR 44
/* Method Numbers */
#define O_VA_CANCEL 25
#define O_VA_CONFIRM 24
#define O_TM_QABSOLUTE 6
/* Property of timer */
typedef struct pr_timer
{
PRS_ROOT root;
PRS_ACTIVE active;
} PR_TIMER;
/* Property of buzsnd */
typedef struct {
unsigned char *snd;
unsigned short int sndrep;
unsigned short int sndnum;
unsigned short int snddelay;
unsigned short int sndvolume;
PR_ROOT *h_done;
unsigned short int m_done;
} PRS_BUZSND;
typedef struct pr_buzsnd
{
PRS_ROOT root;
PRS_ACTIVE active;
PRS_BUZSND buzsnd;
} PR_BUZSND;
/* Constants for alarr */
#define ALARR_GRAN 8
/* Property of alarr */
typedef struct {
RC_VAXVAR rec;
} PRS_ALARR;
typedef struct pr_alarr
{
PRS_ROOT root;
PRS_VAROOT varoot;
PRS_VAFIX vafix;
PRS_VAFLAT vaflat;
PRS_ALARR alarr;
} PR_ALARR;
/* Types for animator */
typedef struct
{
PR_ROOT *own;
int message;
int interval;
int first;
} IN_ANIMATOR;
/* Property of animator */
typedef struct {
PR_ROOT *own;
int message;
int interval;
} PRS_ANIMATOR;
typedef struct pr_animator
{
PRS_ROOT root;
PRS_ACTIVE active;
PRS_ANIMATOR animator;
} PR_ANIMATOR;
