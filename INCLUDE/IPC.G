/* Generated by Ctran from ipc.cat */
#define IPC_G
#ifndef APPMAN_G
#include <appman.g>
#endif
#ifndef P_FILE_H
#include <p_file.h>
#endif
/* Class Numbers */
#define C_SERVER 16
#define C_LINKSV 17
#define C_LINKCL 18
#define C_TOPLIP 19
#define C_EXOPL 20
#define C_CMAP 21
#define C_VOICE 22
#define C_NOTIFY 23
#define C_CONSOL 24
/* Method Numbers */
#define O_CM_AUTOWRAP 9
#define O_NO_DRAW 7
#define O_CO_DRAW 6
#define O_CO_KEY 4
#define O_CM_INSERT 2
#define O_SV_INIT 2
#define O_LC_START 1
#define O_CM_ATTRIB 12
#define O_CO_EDIT 10
#define O_CM_RECT 3
#define O_TIP_COMPLETE 6
#define O_CM_SENSE_SIZE 7
#define O_CO_SIZE 8
#define O_CM_ENQ_DRAW 4
#define O_CO_ESC 9
#define O_SV_RUN 3
#define O_CM_SENSE_CPOS 5
#define O_CM_SCROLL 11
#define O_CO_EXTRA 5
#define O_TIP_GETLINE 5
#define O_TIP_START 4
#define O_LS_GET_DATA 5
#define O_CM_SET_CPOS 6
#define O_CO_CURSOR 7
#define O_LC_GET_DATA 2
#define O_LC_STOP 3
#define O_CM_POINT_ROW 8
#define O_LS_SET_FORMAT 4
#define O_CM_SCROLLOCK 10
#define O_CM_INIT 1
#define O_SV_ABRUN 1
/* Property of server */
typedef struct {
P_QUE q;
unsigned short int t1;
unsigned short int t2;
unsigned short int cid;
} PRS_SERVER;
typedef struct pr_server
{
PRS_ROOT root;
PRS_SERVER server;
} PR_SERVER;
/* Constants for linksv */
#define TY_LINKSV_STEP 0x21
#define TY_LINKSV_DEATH 0x22
#define DF_LINK_NATIVE 0
#define DF_LINK_TEXT 1
#define DF_LINK_TABTEXT 2
#define DF_LINK_VOICE 3
#define DF_LINK_PARAS 4
#define DF_LINK_SPR 5
#define DF_LINK_WRD 6
#define DF_LINK_AGD 7
/* Property of linksv */
typedef struct {
unsigned char *buf;
unsigned short int len;
} PRS_LINKSV;
typedef struct pr_linksv
{
PRS_ROOT root;
PRS_SERVER server;
PRS_LINKSV linksv;
} PR_LINKSV;
/* Property of linkcl */
typedef struct {
unsigned short int pid;
} PRS_LINKCL;
typedef struct pr_linkcl
{
PRS_ROOT root;
PRS_LINKCL linkcl;
} PR_LINKCL;
/* Constants for toplip */
#define TY_TOPLIP_LINE 0x10
#define TY_TOPLIP_DEATH 0x11
/* Types for toplip */
typedef struct
{
short int stat;
unsigned short int mode;
unsigned short int line;
unsigned short int offset;
} PR_TOPLIP_STATUS;
typedef struct
{
unsigned short int pid;
char *bofs;
PR_TOPLIP_STATUS *sofs;
} PR_TOPLIP_SOURCE;
/* Property of toplip */
typedef struct {
PR_TOPLIP_STATUS st;
char buf[256];
} PRS_TOPLIP;
typedef struct pr_toplip
{
PRS_ROOT root;
PRS_SERVER server;
PRS_TOPLIP toplip;
} PR_TOPLIP;
/* Constants for exopl */
#define EXOPL_ISEXP 0x01
#define EXOPL_SIGNAL 0x02
#define EXOPL_NTFY 0x04
/* Types for exopl */
typedef struct
{
double value;
short int error;
unsigned short int line;
unsigned short int offset;
char src[P_FNAMESIZE];
} EXOPL_RESBUF;
typedef struct
{
unsigned short int flags;
short int cid;
unsigned char *qofs;
unsigned short int qlen;
EXOPL_RESBUF *rofs;
} EXOPL_PAR;
/* Property of exopl */
typedef struct {
EXOPL_RESBUF result;
} PRS_EXOPL;
typedef struct pr_exopl
{
PRS_ROOT root;
PRS_ACTIVE active;
PRS_EXOPL exopl;
} PR_EXOPL;
/* Constants for cmap */
#define DR_CMAP_END 0
#define DR_CMAP_TEXT 1
#define DR_CMAP_SPACES 2
#define DR_CMAP_SCROLL 3
#define OP_CMAP_CLEAR 1
#define OP_CMAP_INVALID 2
/* Types for cmap */
typedef struct
{
unsigned short int len;
unsigned char *buf;
unsigned char row;
unsigned char col;
} PR_CMAP_DRAW;
/* Property of cmap */
typedef struct {
unsigned char *base;
unsigned short int toprow;
unsigned short int width;
unsigned short int height;
unsigned short int row;
unsigned short int col;
short int scroll;
unsigned char wrap;
unsigned char slock;
} PRS_CMAP;
typedef struct pr_cmap
{
PRS_ROOT root;
PRS_CMAP cmap;
} PR_CMAP;
/* Constants for voice */
#define TY_VOICE_PLAY 0
#define TY_VOICE_EDIT 1
#define TY_VOICE_CANCEL 2
/* Types for voice */
typedef struct
{
short int *pstat;
unsigned char *buf;
unsigned short int len;
unsigned short int maxlen;
} RQ_VOICE_MSG;
/* Property of voice */
typedef struct {
PR_ROOT *owner;
unsigned short int method;
} PRS_VOICE;
typedef struct pr_voice
{
PRS_ROOT root;
PRS_ACTIVE active;
PRS_VOICE voice;
} PR_VOICE;
/* Constants for notify */
#define NOTIFY_MESS_TYPE 0
#define NOTIFY_MESS_ARGS 5
#define NOTIFY_MESS_SIZE 64
/* Property of notify */
typedef struct {
unsigned char err0text[NOTIFY_MESS_SIZE];
unsigned char err1text[NOTIFY_MESS_SIZE];
unsigned char but0text[NOTIFY_MESS_SIZE];
unsigned char but1text[NOTIFY_MESS_SIZE];
unsigned char but2text[NOTIFY_MESS_SIZE];
unsigned char pname[NOTIFY_MESS_SIZE];
} PRS_NOTIFY;
typedef struct pr_notify
{
PRS_ROOT root;
PRS_ACTIVE active;
PRS_IPCS ipcs;
PRS_NOTIFY notify;
} PR_NOTIFY;
/* Constants for consol */
#define CONSOL_MESS_READ 0
#define CONSOL_MESS_WRITE 1
#define CONSOL_MESS_CLOSE 2
#define CONSOL_MESS_SET 3
#define CONSOL_MESS_SENSE 4
#define CONSOL_MESS_TEST 5
#define CONSOL_MESS_FLUSH 6
#define CONSOL_MESS_CANCEL 7
#define CONSOL_MESS_EDIT 8
#define CONSOL_MESS_SPARE1 9
#define CONSOL_MESS_SPARE2 10
#define CONSOL_MESS_SPARE3 11
#define CONSOL_MESS_SPARE4 12
#define CONSOL_MESS_DIED 13
#define CONSOL_KEY_TYPE_AHEAD 32
#define CONSOL_MAX_STRING 255
/* Types for consol */
typedef struct
{
unsigned short int keycode;
unsigned char modifiers;
unsigned char count;
} PR_CONSOL_WMSG_KEY;
/* Property of consol */
typedef struct {
PR_CMAP *cmap;
unsigned short int rcomp;
unsigned char *rmess;
PR_CONSOL_WMSG_KEY *head;
PR_CONSOL_WMSG_KEY *tail;
PR_CONSOL_WMSG_KEY list[CONSOL_KEY_TYPE_AHEAD];
} PRS_CONSOL;
typedef struct pr_consol
{
PRS_ROOT root;
PRS_SERVER server;
PRS_CONSOL consol;
} PR_CONSOL;
